package tp1.logic.gameobjects;

import tp1.logic.Game;
import tp1.logic.GameObjectContainer;
import tp1.logic.Position;
import tp1.view.Messages;
import tp1.logic.Action;

public class Mario {
	private Position small_pos, big_pos;
	private Action action = Action.UP;
	private String mario;
	private GameObjectContainer game_container;
	private boolean right = true, moving = false, big = true;
	
	public Mario(Game game, Position new_pos) { 
		this.small_pos = new_pos;
		this.big_pos = action.moveUp(new_pos);
	}
	
	public String getIcon() {
		
		if (right) {
			mario = Messages.MARIO_RIGHT;
		}
		
		else {
			mario = Messages.MARIO_LEFT;
		}
		
		if(!moving) {
			mario = Messages.MARIO_STOP;
		}
		
		return mario;
	}
	
	public boolean IsBig() {
		return big;			
	}
	
	public boolean IsInPos(Position pos) {
		if (big)
			return this.big_pos.equals(pos) || this.small_pos.equals(pos);
		else
			return this.small_pos.equals(pos);
	}
	
	public void MoveMario(Action mario_action) {
		switch(mario_action) {
		
		case UP:
			this.small_pos = action.moveUp(small_pos);
			this.big_pos = action.moveUp(big_pos);
			moving = true;
			break;
			
		case DOWN:
			while(!game_container.hasGround(big_pos) && !this.small_pos.outOfBounds()) {
				this.small_pos = action.moveDown(small_pos);
				this.big_pos = action.moveDown(big_pos);
			}
			break;
			
		case LEFT:
			this.small_pos = action.moveLeft(small_pos);
			this.big_pos = action.moveLeft(big_pos);
			moving = true;
			right = false;
			break;
			
		case RIGHT:
			this.small_pos = action.moveRight(small_pos);
			this.big_pos = action.moveRight(big_pos);
			moving = true;
			right = true;
			break;

		}
	}
	
	public void update() {
		//TODO fill your code
	}
}
